//this source code was auto-generated by tolua#, do not modify it
using System;
using LaoHan.Infrastruture.ulua;

public class LaoHan_Control_lhControlNetworkWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LaoHan.Control.lhControlNetwork), typeof(System.Object));
		L.RegFunction("GetInstance", GetInstance);
		L.RegFunction("ConnectLoginServer", ConnectLoginServer);
		L.RegFunction("SendLogin", SendLogin);
		L.RegFunction("ConnectGameServer", ConnectGameServer);
		L.RegFunction("SendGameLogin", SendGameLogin);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LaoHan.Network.lhNetwork arg0 = (LaoHan.Network.lhNetwork)ToLua.CheckObject(L, 1, typeof(LaoHan.Network.lhNetwork));
			LaoHan.Control.lhControlNetwork o = LaoHan.Control.lhControlNetwork.GetInstance(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConnectLoginServer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			System.Net.IPEndPoint arg0 = (System.Net.IPEndPoint)ToLua.CheckObject(L, 1, typeof(System.Net.IPEndPoint));
			System.Action<bool> arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (System.Action<bool>)ToLua.CheckObject(L, 2, typeof(System.Action<bool>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<bool>), func) as System.Action<bool>;
			}

			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			bool o = LaoHan.Control.lhControlNetwork.ConnectLoginServer(arg0, arg1, arg2);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendLogin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			string arg0 = ToLua.CheckString(L, 1);
			ushort arg1 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			ushort arg2 = (ushort)LuaDLL.luaL_checknumber(L, 3);
			ushort arg3 = (ushort)LuaDLL.luaL_checknumber(L, 4);
			LaoHan.Control.lhControlNetwork.SendLogin(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConnectGameServer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			System.Net.IPEndPoint arg0 = (System.Net.IPEndPoint)ToLua.CheckObject(L, 1, typeof(System.Net.IPEndPoint));
			System.Action<bool> arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (System.Action<bool>)ToLua.CheckObject(L, 2, typeof(System.Action<bool>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<bool>), func) as System.Action<bool>;
			}

			LaoHan.Control.lhControlNetwork.ConnectGameServer(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendGameLogin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 2);
			uint arg2 = (uint)LuaDLL.luaL_checknumber(L, 3);
			LaoHan.Control.lhControlNetwork.SendGameLogin(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

